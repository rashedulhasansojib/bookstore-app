{% extends 'base.html.twig' %}
{% block title %}Bookstore Testing App
{% endblock %}
{% block stylesheets %}
	<style>
		#book-table {
			width: 100%;
			border-collapse: collapse;
			margin-top: 20px;
		}

		#book-table th,
		#book-table td {
			border: 1px solid #ddd;
			padding: 8px;
		}

		#book-table th {
			background-color: #f2f2f2;
		}

		#book-list tr:hover {
			background-color: #f2f2f2;
		}

		#loading {
			text-align: center;
			margin-top: 20px;
		}

		#gallery-view {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
			grid-gap: 20px;
			margin-top: 20px;
		}

		.book-card {
			border: 1px solid #ddd;
			padding: 10px;
			text-align: center;
		}

		.book-card img {
			width: 100%;
			height: 200px;
			object-fit: cover;
		}
	</style>
{% endblock %}
{% block body %}
	<h2>Bookstore Testing App</h2>

	<label for="language">Language:</label>
	<select id="language">
		<option value="en_US">English (US)</option>
		<option value="de_DE">German</option>
		<option value="fr_FR">French</option>
	</select>

	<label for="seed">Seed:</label>
	<input type="number" id="seed" value="58933423">
	<button onclick="generateRandomSeed()">ðŸ”€</button>

	<label for="likes">Avg Likes:</label>
	<input type="range" id="likes" min="0" max="10" step="0.1" value="5">

	<label for="reviews">Avg Reviews:</label>
	<input type="number" id="reviews" min="0" max="10" step="0.1" value="4.7">

	<button onclick="exportCSV()">Export to CSV</button>
	<button onclick="toggleView()">Toggle View</button>
	<div id="gallery-view" style="display: none;"></div>


	<table id="book-table">
		<thead>
			<tr>
				<th>#</th>
				<th>ISBN</th>
				<th>Title</th>
				<th>Author(s)</th>
				<th>Publisher</th>
			</tr>
		</thead>
		<tbody id="book-list"><!-- Books will be loaded here dynamically --></tbody>
	</table>
	<div id="loading" style="display: none;">Loading...</div>


	<script>
		let page = 1;
let isLoading = false;

document.addEventListener("DOMContentLoaded", function () {
loadBooks();
window.addEventListener("scroll", handleScroll);
});

function generateRandomSeed() {
document.getElementById("seed").value = Math.floor(Math.random() * 9999999);
reloadBooks();
}

function reloadBooks() {
page = 1;
document.getElementById("book-list").innerHTML = "";
loadBooks();
}

function loadBooks() {
if (isLoading) 
return;



isLoading = true;
document.getElementById("loading").style.display = "block";

let language = document.getElementById("language").value;
let seed = document.getElementById("seed").value;
let likes = document.getElementById("likes").value;
let reviews = document.getElementById("reviews").value;

fetch(`/books?language=${language}&seed=${seed}&likes=${likes}&reviews=${reviews}&page=${page}`).then(response => response.json()).then(data => {
data.forEach(book => {
let row = document.createElement("tr");
row.innerHTML = `
                        <td>${
book.index
}</td>
                        <td>${
book.isbn
}</td>
                        <td>${
book.title
}</td>
                        <td>${
book.author
}</td>
                        <td>${
book.publisher
}</td>
                    `;
row.addEventListener("click", () => showBookDetails(book));
document.getElementById("book-list").appendChild(row);
});
isLoading = false;
document.getElementById("loading").style.display = "none";
page++;
});
}

function handleScroll() {
if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
loadBooks();
}
}

function showBookDetails(book) {
alert(`Title: ${
book.title
}\nAuthor: ${
book.author
}\nPublisher: ${
book.publisher
}\nLikes: ${
book.likes
}\nReviews: ${
book.reviews.length
}`);
}

// Export to CSV
function exportCSV() {
let language = document.getElementById("language").value;
let seed = document.getElementById("seed").value;
let likes = document.getElementById("likes").value;
let reviews = document.getElementById("reviews").value;
window.location.href = `/export-csv?language=${language}&seed=${seed}&likes=${likes}&reviews=${reviews}`;
}

// Toggle View
let isTableView = true;

function toggleView() {
isTableView = ! isTableView;
document.getElementById("book-table").style.display = isTableView ? "table" : "none";
document.getElementById("gallery-view").style.display = isTableView ? "none" : "grid";
if (! isTableView) 
loadGallery();



}

function loadGallery() {
let gallery = document.getElementById("gallery-view");
gallery.innerHTML = "";

fetch(`/books?language=${language}&seed=${seed}&likes=${likes}&reviews=${reviews}&page=${page}`).then(response => response.json()).then(data => {
data.forEach(book => {
let card = document.createElement("div");
card.className = "book-card";
card.innerHTML = `
                        <img src="https://via.placeholder.com/150" alt="Book Cover">
                        <h3>${
book.title
}</h3>
                        <p>by ${
book.author
}</p>
                        <p>Publisher: ${
book.publisher
}</p>
                    `;
gallery.appendChild(card);
});
});
}
	</script>
{% endblock %}

